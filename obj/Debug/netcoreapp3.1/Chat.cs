// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/chat.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace ChatService.Protos {

  /// <summary>Holder for reflection information generated from Protos/chat.proto</summary>
  public static partial class ChatReflection {

    #region Descriptor
    /// <summary>File descriptor for Protos/chat.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static ChatReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "ChFQcm90b3MvY2hhdC5wcm90bxIIc2VydmljZXMiIwoRVXNlckV2ZW50c1Jl",
            "cXVlc3QSDgoGdXNlcmlkGAEgASgJInEKElVzZXJFdmVudHNSZXNwb25zZRIm",
            "CglldmVudFR5cGUYASABKA4yEy5zZXJ2aWNlcy5FdmVudFR5cGUSIgoHbWVz",
            "c2FnZRgCIAEoCzIRLnNlcnZpY2VzLk1lc3NhZ2USDwoHZ3JvdXBJZBgDIAEo",
            "DSIkChJOZXdNZXNzYWdlc1JlcXVlc3QSDgoGdXNlcmlkGAEgASgJIjkKE05l",
            "d01lc3NhZ2VzUmVzcG9uc2USIgoHbWVzc2FnZRgBIAMoCzIRLnNlcnZpY2Vz",
            "Lk1lc3NhZ2UiJAoSQWxsTWVzc2FnZXNSZXF1ZXN0Eg4KBnVzZXJpZBgBIAEo",
            "CSI5ChNBbGxNZXNzYWdlc1Jlc3BvbnNlEiIKB21lc3NhZ2UYASADKAsyES5z",
            "ZXJ2aWNlcy5NZXNzYWdlIqYBCgdNZXNzYWdlEgoKAmlkGAEgASgJEhAKCGF1",
            "dGhvcklkGAIgASgJEg8KB3JlcGx5SWQYAyABKAkSEAoIbWltZVR5cGUYBCAB",
            "KAkSEQoJaXNGb3J3YXJkGAUgASgIEhUKDW1lc3NhZ2VTdGF0dXMYBiABKA0S",
            "HwoXZGF0ZVBvc3RlZFVuaXhUaW1lc3RhbXAYByABKAMSDwoHZ3JvdXBJZBgI",
            "IAEoCSpICglFdmVudFR5cGUSFAoQTUVTU0FHRV9SRUNFSVZFRBAAEhEKDUdS",
            "T1VQX0NSRUFURUQQARISCg5DT05UQUNUX0pPSU5FRBACMvIBCgRDaGF0EkwK",
            "DUdldFVzZXJFdmVudHMSGy5zZXJ2aWNlcy5Vc2VyRXZlbnRzUmVxdWVzdBoc",
            "LnNlcnZpY2VzLlVzZXJFdmVudHNSZXNwb25zZTABEk0KDkdldE5ld01lc3Nh",
            "Z2VzEhwuc2VydmljZXMuTmV3TWVzc2FnZXNSZXF1ZXN0Gh0uc2VydmljZXMu",
            "TmV3TWVzc2FnZXNSZXNwb25zZRJNCg5HZXRBbGxNZXNzYWdlcxIcLnNlcnZp",
            "Y2VzLkFsbE1lc3NhZ2VzUmVxdWVzdBodLnNlcnZpY2VzLkFsbE1lc3NhZ2Vz",
            "UmVzcG9uc2VCFaoCEkNoYXRTZXJ2aWNlLlByb3Rvc2IGcHJvdG8z"));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::ChatService.Protos.EventType), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.UserEventsRequest), global::ChatService.Protos.UserEventsRequest.Parser, new[]{ "Userid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.UserEventsResponse), global::ChatService.Protos.UserEventsResponse.Parser, new[]{ "EventType", "Message", "GroupId" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.NewMessagesRequest), global::ChatService.Protos.NewMessagesRequest.Parser, new[]{ "Userid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.NewMessagesResponse), global::ChatService.Protos.NewMessagesResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.AllMessagesRequest), global::ChatService.Protos.AllMessagesRequest.Parser, new[]{ "Userid" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.AllMessagesResponse), global::ChatService.Protos.AllMessagesResponse.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::ChatService.Protos.Message), global::ChatService.Protos.Message.Parser, new[]{ "Id", "AuthorId", "ReplyId", "MimeType", "IsForward", "MessageStatus", "DatePostedUnixTimestamp", "GroupId" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EventType {
    [pbr::OriginalName("MESSAGE_RECEIVED")] MessageReceived = 0,
    [pbr::OriginalName("GROUP_CREATED")] GroupCreated = 1,
    [pbr::OriginalName("CONTACT_JOINED")] ContactJoined = 2,
  }

  #endregion

  #region Messages
  /// <summary>
  /// gRPC stream that gives all message requests when sent.
  /// </summary>
  public sealed partial class UserEventsRequest : pb::IMessage<UserEventsRequest> {
    private static readonly pb::MessageParser<UserEventsRequest> _parser = new pb::MessageParser<UserEventsRequest>(() => new UserEventsRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEventsRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsRequest(UserEventsRequest other) : this() {
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsRequest Clone() {
      return new UserEventsRequest(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEventsRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEventsRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEventsRequest other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class UserEventsResponse : pb::IMessage<UserEventsResponse> {
    private static readonly pb::MessageParser<UserEventsResponse> _parser = new pb::MessageParser<UserEventsResponse>(() => new UserEventsResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<UserEventsResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsResponse(UserEventsResponse other) : this() {
      eventType_ = other.eventType_;
      message_ = other.message_ != null ? other.message_.Clone() : null;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public UserEventsResponse Clone() {
      return new UserEventsResponse(this);
    }

    /// <summary>Field number for the "eventType" field.</summary>
    public const int EventTypeFieldNumber = 1;
    private global::ChatService.Protos.EventType eventType_ = global::ChatService.Protos.EventType.MessageReceived;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatService.Protos.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 2;
    private global::ChatService.Protos.Message message_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::ChatService.Protos.Message Message {
      get { return message_; }
      set {
        message_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 3;
    private uint groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as UserEventsResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(UserEventsResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (EventType != other.EventType) return false;
      if (!object.Equals(Message, other.Message)) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (EventType != global::ChatService.Protos.EventType.MessageReceived) hash ^= EventType.GetHashCode();
      if (message_ != null) hash ^= Message.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (EventType != global::ChatService.Protos.EventType.MessageReceived) {
        output.WriteRawTag(8);
        output.WriteEnum((int) EventType);
      }
      if (message_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Message);
      }
      if (GroupId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (EventType != global::ChatService.Protos.EventType.MessageReceived) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (message_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Message);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(UserEventsResponse other) {
      if (other == null) {
        return;
      }
      if (other.EventType != global::ChatService.Protos.EventType.MessageReceived) {
        EventType = other.EventType;
      }
      if (other.message_ != null) {
        if (message_ == null) {
          Message = new global::ChatService.Protos.Message();
        }
        Message.MergeFrom(other.Message);
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            EventType = (global::ChatService.Protos.EventType) input.ReadEnum();
            break;
          }
          case 18: {
            if (message_ == null) {
              Message = new global::ChatService.Protos.Message();
            }
            input.ReadMessage(Message);
            break;
          }
          case 24: {
            GroupId = input.ReadUInt32();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// get all the new messages, useful on start of application
  /// </summary>
  public sealed partial class NewMessagesRequest : pb::IMessage<NewMessagesRequest> {
    private static readonly pb::MessageParser<NewMessagesRequest> _parser = new pb::MessageParser<NewMessagesRequest>(() => new NewMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesRequest(NewMessagesRequest other) : this() {
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesRequest Clone() {
      return new NewMessagesRequest(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class NewMessagesResponse : pb::IMessage<NewMessagesResponse> {
    private static readonly pb::MessageParser<NewMessagesResponse> _parser = new pb::MessageParser<NewMessagesResponse>(() => new NewMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<NewMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesResponse(NewMessagesResponse other) : this() {
      message_ = other.message_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public NewMessagesResponse Clone() {
      return new NewMessagesResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ChatService.Protos.Message> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::ChatService.Protos.Message.Parser);
    private readonly pbc::RepeatedField<global::ChatService.Protos.Message> message_ = new pbc::RepeatedField<global::ChatService.Protos.Message>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatService.Protos.Message> Message {
      get { return message_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as NewMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(NewMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(NewMessagesResponse other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// get ALL the user's messages, useful when app is first installed
  /// </summary>
  public sealed partial class AllMessagesRequest : pb::IMessage<AllMessagesRequest> {
    private static readonly pb::MessageParser<AllMessagesRequest> _parser = new pb::MessageParser<AllMessagesRequest>(() => new AllMessagesRequest());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllMessagesRequest> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesRequest() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesRequest(AllMessagesRequest other) : this() {
      userid_ = other.userid_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesRequest Clone() {
      return new AllMessagesRequest(this);
    }

    /// <summary>Field number for the "userid" field.</summary>
    public const int UseridFieldNumber = 1;
    private string userid_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Userid {
      get { return userid_; }
      set {
        userid_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllMessagesRequest);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllMessagesRequest other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Userid != other.Userid) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Userid.Length != 0) hash ^= Userid.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Userid.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Userid);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Userid.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Userid);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllMessagesRequest other) {
      if (other == null) {
        return;
      }
      if (other.Userid.Length != 0) {
        Userid = other.Userid;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Userid = input.ReadString();
            break;
          }
        }
      }
    }

  }

  public sealed partial class AllMessagesResponse : pb::IMessage<AllMessagesResponse> {
    private static readonly pb::MessageParser<AllMessagesResponse> _parser = new pb::MessageParser<AllMessagesResponse>(() => new AllMessagesResponse());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AllMessagesResponse> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesResponse() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesResponse(AllMessagesResponse other) : this() {
      message_ = other.message_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AllMessagesResponse Clone() {
      return new AllMessagesResponse(this);
    }

    /// <summary>Field number for the "message" field.</summary>
    public const int MessageFieldNumber = 1;
    private static readonly pb::FieldCodec<global::ChatService.Protos.Message> _repeated_message_codec
        = pb::FieldCodec.ForMessage(10, global::ChatService.Protos.Message.Parser);
    private readonly pbc::RepeatedField<global::ChatService.Protos.Message> message_ = new pbc::RepeatedField<global::ChatService.Protos.Message>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::ChatService.Protos.Message> Message {
      get { return message_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AllMessagesResponse);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AllMessagesResponse other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!message_.Equals(other.message_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= message_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      message_.WriteTo(output, _repeated_message_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += message_.CalculateSize(_repeated_message_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AllMessagesResponse other) {
      if (other == null) {
        return;
      }
      message_.Add(other.message_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            message_.AddEntriesFrom(input, _repeated_message_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class Message : pb::IMessage<Message> {
    private static readonly pb::MessageParser<Message> _parser = new pb::MessageParser<Message>(() => new Message());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Message> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::ChatService.Protos.ChatReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message(Message other) : this() {
      id_ = other.id_;
      authorId_ = other.authorId_;
      replyId_ = other.replyId_;
      mimeType_ = other.mimeType_;
      isForward_ = other.isForward_;
      messageStatus_ = other.messageStatus_;
      datePostedUnixTimestamp_ = other.datePostedUnixTimestamp_;
      groupId_ = other.groupId_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Message Clone() {
      return new Message(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private string id_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "authorId" field.</summary>
    public const int AuthorIdFieldNumber = 2;
    private string authorId_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string AuthorId {
      get { return authorId_; }
      set {
        authorId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "replyId" field.</summary>
    public const int ReplyIdFieldNumber = 3;
    private string replyId_ = "";
    /// <summary>
    /// will be non null if the message is a reply.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string ReplyId {
      get { return replyId_; }
      set {
        replyId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "mimeType" field.</summary>
    public const int MimeTypeFieldNumber = 4;
    private string mimeType_ = "";
    /// <summary>
    /// will be non null if is a media, use this to check the type of media as well.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string MimeType {
      get { return mimeType_; }
      set {
        mimeType_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "isForward" field.</summary>
    public const int IsForwardFieldNumber = 5;
    private bool isForward_;
    /// <summary>
    /// if the message is a forwarded message
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsForward {
      get { return isForward_; }
      set {
        isForward_ = value;
      }
    }

    /// <summary>Field number for the "messageStatus" field.</summary>
    public const int MessageStatusFieldNumber = 6;
    private uint messageStatus_;
    /// <summary>
    /// 0 = Sent, 1 = Received, 2 = Read 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public uint MessageStatus {
      get { return messageStatus_; }
      set {
        messageStatus_ = value;
      }
    }

    /// <summary>Field number for the "datePostedUnixTimestamp" field.</summary>
    public const int DatePostedUnixTimestampFieldNumber = 7;
    private long datePostedUnixTimestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long DatePostedUnixTimestamp {
      get { return datePostedUnixTimestamp_; }
      set {
        datePostedUnixTimestamp_ = value;
      }
    }

    /// <summary>Field number for the "groupId" field.</summary>
    public const int GroupIdFieldNumber = 8;
    private string groupId_ = "";
    /// <summary>
    /// id of the group
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string GroupId {
      get { return groupId_; }
      set {
        groupId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Message);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Message other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (AuthorId != other.AuthorId) return false;
      if (ReplyId != other.ReplyId) return false;
      if (MimeType != other.MimeType) return false;
      if (IsForward != other.IsForward) return false;
      if (MessageStatus != other.MessageStatus) return false;
      if (DatePostedUnixTimestamp != other.DatePostedUnixTimestamp) return false;
      if (GroupId != other.GroupId) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (AuthorId.Length != 0) hash ^= AuthorId.GetHashCode();
      if (ReplyId.Length != 0) hash ^= ReplyId.GetHashCode();
      if (MimeType.Length != 0) hash ^= MimeType.GetHashCode();
      if (IsForward != false) hash ^= IsForward.GetHashCode();
      if (MessageStatus != 0) hash ^= MessageStatus.GetHashCode();
      if (DatePostedUnixTimestamp != 0L) hash ^= DatePostedUnixTimestamp.GetHashCode();
      if (GroupId.Length != 0) hash ^= GroupId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Id);
      }
      if (AuthorId.Length != 0) {
        output.WriteRawTag(18);
        output.WriteString(AuthorId);
      }
      if (ReplyId.Length != 0) {
        output.WriteRawTag(26);
        output.WriteString(ReplyId);
      }
      if (MimeType.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(MimeType);
      }
      if (IsForward != false) {
        output.WriteRawTag(40);
        output.WriteBool(IsForward);
      }
      if (MessageStatus != 0) {
        output.WriteRawTag(48);
        output.WriteUInt32(MessageStatus);
      }
      if (DatePostedUnixTimestamp != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(DatePostedUnixTimestamp);
      }
      if (GroupId.Length != 0) {
        output.WriteRawTag(66);
        output.WriteString(GroupId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Id);
      }
      if (AuthorId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(AuthorId);
      }
      if (ReplyId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(ReplyId);
      }
      if (MimeType.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(MimeType);
      }
      if (IsForward != false) {
        size += 1 + 1;
      }
      if (MessageStatus != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(MessageStatus);
      }
      if (DatePostedUnixTimestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(DatePostedUnixTimestamp);
      }
      if (GroupId.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(GroupId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Message other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.AuthorId.Length != 0) {
        AuthorId = other.AuthorId;
      }
      if (other.ReplyId.Length != 0) {
        ReplyId = other.ReplyId;
      }
      if (other.MimeType.Length != 0) {
        MimeType = other.MimeType;
      }
      if (other.IsForward != false) {
        IsForward = other.IsForward;
      }
      if (other.MessageStatus != 0) {
        MessageStatus = other.MessageStatus;
      }
      if (other.DatePostedUnixTimestamp != 0L) {
        DatePostedUnixTimestamp = other.DatePostedUnixTimestamp;
      }
      if (other.GroupId.Length != 0) {
        GroupId = other.GroupId;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadString();
            break;
          }
          case 18: {
            AuthorId = input.ReadString();
            break;
          }
          case 26: {
            ReplyId = input.ReadString();
            break;
          }
          case 34: {
            MimeType = input.ReadString();
            break;
          }
          case 40: {
            IsForward = input.ReadBool();
            break;
          }
          case 48: {
            MessageStatus = input.ReadUInt32();
            break;
          }
          case 56: {
            DatePostedUnixTimestamp = input.ReadInt64();
            break;
          }
          case 66: {
            GroupId = input.ReadString();
            break;
          }
        }
      }
    }

  }

  #endregion

}

#endregion Designer generated code
