// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: Protos/identity.proto
// </auto-generated>
#pragma warning disable 0414, 1591
#region Designer generated code

using grpc = global::Grpc.Core;

namespace IdentityService.Protos {
  /// <summary>
  /// for login and signup, provides login token.
  /// </summary>
  public static partial class Identity
  {
    static readonly string __ServiceName = "services.Identity";

    static readonly grpc::Marshaller<global::IdentityService.Protos.OTPRequest> __Marshaller_services_OTPRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.OTPRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.OTPResponse> __Marshaller_services_OTPResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.OTPResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.VerifyOTPRequest> __Marshaller_services_VerifyOTPRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.VerifyOTPRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.VerifyOTPResponse> __Marshaller_services_VerifyOTPResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.VerifyOTPResponse.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.UserSignUpListenerRequest> __Marshaller_services_UserSignUpListenerRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.UserSignUpListenerRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.UserSignUpEvent> __Marshaller_services_UserSignUpEvent = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.UserSignUpEvent.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.VerifyTokenRequest> __Marshaller_services_VerifyTokenRequest = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.VerifyTokenRequest.Parser.ParseFrom);
    static readonly grpc::Marshaller<global::IdentityService.Protos.VerifyTokenResponse> __Marshaller_services_VerifyTokenResponse = grpc::Marshallers.Create((arg) => global::Google.Protobuf.MessageExtensions.ToByteArray(arg), global::IdentityService.Protos.VerifyTokenResponse.Parser.ParseFrom);

    static readonly grpc::Method<global::IdentityService.Protos.OTPRequest, global::IdentityService.Protos.OTPResponse> __Method_RequestOTP = new grpc::Method<global::IdentityService.Protos.OTPRequest, global::IdentityService.Protos.OTPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "RequestOTP",
        __Marshaller_services_OTPRequest,
        __Marshaller_services_OTPResponse);

    static readonly grpc::Method<global::IdentityService.Protos.VerifyOTPRequest, global::IdentityService.Protos.VerifyOTPResponse> __Method_VerifyOTP = new grpc::Method<global::IdentityService.Protos.VerifyOTPRequest, global::IdentityService.Protos.VerifyOTPResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyOTP",
        __Marshaller_services_VerifyOTPRequest,
        __Marshaller_services_VerifyOTPResponse);

    static readonly grpc::Method<global::IdentityService.Protos.UserSignUpListenerRequest, global::IdentityService.Protos.UserSignUpEvent> __Method_UserSignUpListener = new grpc::Method<global::IdentityService.Protos.UserSignUpListenerRequest, global::IdentityService.Protos.UserSignUpEvent>(
        grpc::MethodType.ServerStreaming,
        __ServiceName,
        "UserSignUpListener",
        __Marshaller_services_UserSignUpListenerRequest,
        __Marshaller_services_UserSignUpEvent);

    static readonly grpc::Method<global::IdentityService.Protos.VerifyTokenRequest, global::IdentityService.Protos.VerifyTokenResponse> __Method_VerifyToken = new grpc::Method<global::IdentityService.Protos.VerifyTokenRequest, global::IdentityService.Protos.VerifyTokenResponse>(
        grpc::MethodType.Unary,
        __ServiceName,
        "VerifyToken",
        __Marshaller_services_VerifyTokenRequest,
        __Marshaller_services_VerifyTokenResponse);

    /// <summary>Service descriptor</summary>
    public static global::Google.Protobuf.Reflection.ServiceDescriptor Descriptor
    {
      get { return global::IdentityService.Protos.IdentityReflection.Descriptor.Services[0]; }
    }

    /// <summary>Base class for server-side implementations of Identity</summary>
    [grpc::BindServiceMethod(typeof(Identity), "BindService")]
    public abstract partial class IdentityBase
    {
      /// <summary>
      /// we only identify by phone number, so this is our login function
      /// </summary>
      /// <param name="request">The request received from the client.</param>
      /// <param name="context">The context of the server-side call handler being invoked.</param>
      /// <returns>The response to send back to the client (wrapped by a task).</returns>
      public virtual global::System.Threading.Tasks.Task<global::IdentityService.Protos.OTPResponse> RequestOTP(global::IdentityService.Protos.OTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::IdentityService.Protos.VerifyOTPResponse> VerifyOTP(global::IdentityService.Protos.VerifyOTPRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task UserSignUpListener(global::IdentityService.Protos.UserSignUpListenerRequest request, grpc::IServerStreamWriter<global::IdentityService.Protos.UserSignUpEvent> responseStream, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

      public virtual global::System.Threading.Tasks.Task<global::IdentityService.Protos.VerifyTokenResponse> VerifyToken(global::IdentityService.Protos.VerifyTokenRequest request, grpc::ServerCallContext context)
      {
        throw new grpc::RpcException(new grpc::Status(grpc::StatusCode.Unimplemented, ""));
      }

    }

    /// <summary>Creates service definition that can be registered with a server</summary>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static grpc::ServerServiceDefinition BindService(IdentityBase serviceImpl)
    {
      return grpc::ServerServiceDefinition.CreateBuilder()
          .AddMethod(__Method_RequestOTP, serviceImpl.RequestOTP)
          .AddMethod(__Method_VerifyOTP, serviceImpl.VerifyOTP)
          .AddMethod(__Method_UserSignUpListener, serviceImpl.UserSignUpListener)
          .AddMethod(__Method_VerifyToken, serviceImpl.VerifyToken).Build();
    }

    /// <summary>Register service method with a service binder with or without implementation. Useful when customizing the  service binding logic.
    /// Note: this method is part of an experimental API that can change or be removed without any prior notice.</summary>
    /// <param name="serviceBinder">Service methods will be bound by calling <c>AddMethod</c> on this object.</param>
    /// <param name="serviceImpl">An object implementing the server-side handling logic.</param>
    public static void BindService(grpc::ServiceBinderBase serviceBinder, IdentityBase serviceImpl)
    {
      serviceBinder.AddMethod(__Method_RequestOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IdentityService.Protos.OTPRequest, global::IdentityService.Protos.OTPResponse>(serviceImpl.RequestOTP));
      serviceBinder.AddMethod(__Method_VerifyOTP, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IdentityService.Protos.VerifyOTPRequest, global::IdentityService.Protos.VerifyOTPResponse>(serviceImpl.VerifyOTP));
      serviceBinder.AddMethod(__Method_UserSignUpListener, serviceImpl == null ? null : new grpc::ServerStreamingServerMethod<global::IdentityService.Protos.UserSignUpListenerRequest, global::IdentityService.Protos.UserSignUpEvent>(serviceImpl.UserSignUpListener));
      serviceBinder.AddMethod(__Method_VerifyToken, serviceImpl == null ? null : new grpc::UnaryServerMethod<global::IdentityService.Protos.VerifyTokenRequest, global::IdentityService.Protos.VerifyTokenResponse>(serviceImpl.VerifyToken));
    }

  }
}
#endregion
